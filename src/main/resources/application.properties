server.port = 8084
spring.application.name = Airline Reservation System
## MySQL

spring.datasource.url=jdbc:mysql://localhost:3306/reservation-db?serverTimezone=UTC&allowPublicKeyRetrieval=true&useSSL=false
spring.datasource.username=flight
spring.datasource.password=flight

spring.jpa.database=mysql
#`hibernate_sequence' doesn't exist
spring.jpa.hibernate.use-new-id-generator-mappings=false

# loading data.sql
spring.datasource.initialization-mode=always

# drop n create table, good for testing, comment this in production
spring.jpa.hibernate.ddl-auto=create
spring.security.user.name= app-user
spring.security.user.password= ba84853f-c111-44e2-8fec-5dd94505db63

# jwt config
airline.reservation.jwt.secret=cod^$e#b#us$t$e$rs@#8
airline.reservation.jwt.expiration-time= 864000000
airline.reservation.jwt.token-prefix="Bearer "
airline.reservation.jwt.header-string="Authorization"
airline.reservation.jwt.issuer="codebusters"


## Email Properties
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=sample@gmail.com
spring.mail.password=sample_password

# Other properties
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

# TLS , port 587
spring.mail.properties.mail.smtp.starttls.enable=true

# Rabbit
spring.rabbitmq.host=localhost
